<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cuit.xueyian.dao.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="org.cuit.xueyian.model.Announcement">
    <!--@mbg.generated-->
    <!--@Table announcement-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="reporter" jdbcType="VARCHAR" property="reporter" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="is_urge" jdbcType="INTEGER" property="isUrge" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, title, content, reporter, `time`, is_urge
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cuit.xueyian.model.Announcement" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into announcement (title, content, reporter, 
      `time`, is_urge)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{reporter,jdbcType=VARCHAR}, 
      #{time,jdbcType=DATE}, #{isUrge,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cuit.xueyian.model.Announcement" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="reporter != null">
        reporter,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="isUrge != null">
        is_urge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reporter != null">
        #{reporter,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="isUrge != null">
        #{isUrge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cuit.xueyian.model.Announcement">
    <!--@mbg.generated-->
    update announcement
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reporter != null">
        reporter = #{reporter,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=DATE},
      </if>
      <if test="isUrge != null">
        is_urge = #{isUrge,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cuit.xueyian.model.Announcement">
    <!--@mbg.generated-->
    update announcement
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      reporter = #{reporter,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=DATETIMEOFFSET},
      is_urge = #{isUrge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAnnouncementList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from announcement
    limit #{pageSize}
    offset #{offsetData}
  </select>

  <select id="getTotalNums" resultType="java.lang.Long">
    select count(id) from announcement
  </select>

  <select id="getAll" resultMap="BaseResultMap" >
    select * from announcement order by id desc
  </select>
</mapper>