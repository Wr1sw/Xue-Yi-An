<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cuit.xueyian.dao.SalaryStandardDetailsMapper">
    <resultMap id="BaseResultMap" type="org.cuit.xueyian.model.SalaryStandardDetails">
        <id column="sdt_id" jdbcType="INTEGER" property="sdtId"/>
        <result column="standard_id" jdbcType="VARCHAR" property="standardId"/>
        <result column="standard_name" jdbcType="VARCHAR" property="standardName"/>
        <result column="basic_salary" jdbcType="INTEGER" property="basicSalary"/>
        <result column="lunch_salary" jdbcType="INTEGER" property="lunchSalary"/>
        <result column="traffic_salary" jdbcType="INTEGER" property="trafficSalary"/>
        <result column="all_salary" jdbcType="INTEGER" property="allSalary"/>
        <result column="pension_base" jdbcType="INTEGER" property="pensionBase"/>
        <result column="pension_per" jdbcType="REAL" property="pensionPer"/>
        <result column="medical_base" jdbcType="INTEGER" property="medicalBase"/>
        <result column="medical_per" jdbcType="REAL" property="medicalPer"/>
        <result column="accumulationFund_base" jdbcType="INTEGER" property="accumulationfundBase"/>
        <result column="accumulationFund_per" jdbcType="REAL" property="accumulationfundPer"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    sdt_id, standard_id, standard_name, basic_salary, lunch_salary, traffic_salary, all_salary, 
    pension_base, pension_per, medical_base, medical_per, accumulationFund_base, accumulationFund_per, 
    create_date
  </sql>
    <select id="getStandardDetailsByStanderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        salary_standard_details
        where
        standard_id = #{standardId}
    </select>
    <select id="getAllSalaryStanderDetailsWithCheck" resultMap="BaseResultMap">
    select
        sd.*,s.designer
    from
        salary_standard_details sd, salary_standard s
    where
        sd.standard_id = s.standard_id and s.check_status != "0"

  </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from salary_standard_details
        where sdt_id = #{sdtId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from salary_standard_details
    where sdt_id = #{sdtId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.cuit.xueyian.model.SalaryStandardDetails">
    insert into salary_standard_details (sdt_id, standard_id, standard_name, 
      basic_salary, lunch_salary, traffic_salary, 
      all_salary, pension_base, pension_per, 
      medical_base, medical_per, accumulationFund_base, 
      accumulationFund_per, create_date)
    values (#{sdtId,jdbcType=INTEGER}, #{standardId,jdbcType=VARCHAR}, #{standardName,jdbcType=VARCHAR}, 
      #{basicSalary,jdbcType=INTEGER}, #{lunchSalary,jdbcType=INTEGER}, #{trafficSalary,jdbcType=INTEGER}, 
      #{allSalary,jdbcType=INTEGER}, #{pensionBase,jdbcType=INTEGER}, #{pensionPer,jdbcType=REAL}, 
      #{medicalBase,jdbcType=INTEGER}, #{medicalPer,jdbcType=REAL}, #{accumulationfundBase,jdbcType=INTEGER}, 
      #{accumulationfundPer,jdbcType=REAL}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="org.cuit.xueyian.model.SalaryStandardDetails">
        insert into salary_standard_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sdtId != null">
                sdt_id,
            </if>
            <if test="standardId != null">
                standard_id,
            </if>
            <if test="standardName != null">
                standard_name,
            </if>
            <if test="basicSalary != null">
                basic_salary,
            </if>
            <if test="lunchSalary != null">
                lunch_salary,
            </if>
            <if test="trafficSalary != null">
                traffic_salary,
            </if>
            <if test="allSalary != null">
                all_salary,
            </if>
            <if test="pensionBase != null">
                pension_base,
            </if>
            <if test="pensionPer != null">
                pension_per,
            </if>
            <if test="medicalBase != null">
                medical_base,
            </if>
            <if test="medicalPer != null">
                medical_per,
            </if>
            <if test="accumulationfundBase != null">
                accumulationFund_base,
            </if>
            <if test="accumulationfundPer != null">
                accumulationFund_per,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sdtId != null">
                #{sdtId,jdbcType=INTEGER},
            </if>
            <if test="standardId != null">
                #{standardId,jdbcType=VARCHAR},
            </if>
            <if test="standardName != null">
                #{standardName,jdbcType=VARCHAR},
            </if>
            <if test="basicSalary != null">
                #{basicSalary,jdbcType=INTEGER},
            </if>
            <if test="lunchSalary != null">
                #{lunchSalary,jdbcType=INTEGER},
            </if>
            <if test="trafficSalary != null">
                #{trafficSalary,jdbcType=INTEGER},
            </if>
            <if test="allSalary != null">
                #{allSalary,jdbcType=INTEGER},
            </if>
            <if test="pensionBase != null">
                #{pensionBase,jdbcType=INTEGER},
            </if>
            <if test="pensionPer != null">
                #{pensionPer,jdbcType=REAL},
            </if>
            <if test="medicalBase != null">
                #{medicalBase,jdbcType=INTEGER},
            </if>
            <if test="medicalPer != null">
                #{medicalPer,jdbcType=REAL},
            </if>
            <if test="accumulationfundBase != null">
                #{accumulationfundBase,jdbcType=INTEGER},
            </if>
            <if test="accumulationfundPer != null">
                #{accumulationfundPer,jdbcType=REAL},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.cuit.xueyian.model.SalaryStandardDetails">
        update salary_standard_details
        <set>
            <if test="standardId != null">
                standard_id = #{standardId,jdbcType=VARCHAR},
            </if>
            <if test="standardName != null">
                standard_name = #{standardName,jdbcType=VARCHAR},
            </if>
            <if test="basicSalary != null">
                basic_salary = #{basicSalary,jdbcType=INTEGER},
            </if>
            <if test="lunchSalary != null">
                lunch_salary = #{lunchSalary,jdbcType=INTEGER},
            </if>
            <if test="trafficSalary != null">
                traffic_salary = #{trafficSalary,jdbcType=INTEGER},
            </if>
            <if test="allSalary != null">
                all_salary = #{allSalary,jdbcType=INTEGER},
            </if>
            <if test="pensionBase != null">
                pension_base = #{pensionBase,jdbcType=INTEGER},
            </if>
            <if test="pensionPer != null">
                pension_per = #{pensionPer,jdbcType=REAL},
            </if>
            <if test="medicalBase != null">
                medical_base = #{medicalBase,jdbcType=INTEGER},
            </if>
            <if test="medicalPer != null">
                medical_per = #{medicalPer,jdbcType=REAL},
            </if>
            <if test="accumulationfundBase != null">
                accumulationFund_base = #{accumulationfundBase,jdbcType=INTEGER},
            </if>
            <if test="accumulationfundPer != null">
                accumulationFund_per = #{accumulationfundPer,jdbcType=REAL},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where sdt_id = #{sdtId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.cuit.xueyian.model.SalaryStandardDetails">
    update salary_standard_details
    set standard_id = #{standardId,jdbcType=VARCHAR},
      standard_name = #{standardName,jdbcType=VARCHAR},
      basic_salary = #{basicSalary,jdbcType=INTEGER},
      lunch_salary = #{lunchSalary,jdbcType=INTEGER},
      traffic_salary = #{trafficSalary,jdbcType=INTEGER},
      all_salary = #{allSalary,jdbcType=INTEGER},
      pension_base = #{pensionBase,jdbcType=INTEGER},
      pension_per = #{pensionPer,jdbcType=REAL},
      medical_base = #{medicalBase,jdbcType=INTEGER},
      medical_per = #{medicalPer,jdbcType=REAL},
      accumulationFund_base = #{accumulationfundBase,jdbcType=INTEGER},
      accumulationFund_per = #{accumulationfundPer,jdbcType=REAL},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where sdt_id = #{sdtId,jdbcType=INTEGER}
  </update>
</mapper>